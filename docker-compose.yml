version: "3.9"
   
volumes:
  pg-admin2:
    external: true
  pirates-booty:
    external: true
services:
  db:
    build:
      context: database/data
      dockerfile: Dockerfile.dev
    image: postgres:14.2-bullseye
    volumes:
      - pirates-booty/database/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "15432:5432"
  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin2:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: alexdchiu@gmail.com
      PGADMIN_DEFAULT_PASSWORD: hello123
      PGADMIN_DISABLE_POSTFIX: 1
  workouts:
    build:
      context: ./workouts
      dockerfile: ./Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./workouts:/app
    depends_on:
      - rabbitmq
  accounts:
    build:
      context: ./accounts
      dockerfile: ./Dockerfile.dev
    ports:
      - "8001:8000"
    volumes:
      - ./accounts:/app 
  react:
    image: node:latest
    command: npm start
    working_dir: /app
    volumes:
      - ./ghi/app:/app
    environment:
      - HOST=0.0.0.0
      - PORT=3001
      - NODE_ENV=development
    ports:
      - "3001:3001"
  rabbitmq:
    image: rabbitmq:3


#
# monolith:
#     build:
#       context: ./workouts
#       dockerfile: ./Dockerfile.dev
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./workouts:/app
#     depends_on:
#       - rabbitmq
#   attendees_microservice:
#     build:
#       context: ./accounts
#       dockerfile: ./Dockerfile.dev
#     ports:
#       - "8001:8001"
#     volumes:
#       - ./accounts:/app    